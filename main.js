 const API_URL = 'https://685177248612b47a2c0a3345.mockapi.io/contact';
    async function getContacts() {
      try {
        const res = await fetch(API_URL);
        const contacts = await res.json();
        const list = document.getElementById('contactList');
        list.innerHTML = '';
        contacts.forEach(contact => {
          const li = document.createElement('li');
          li.innerHTML = `
            <span>${contact.name} ‚Äî ${contact.phone}</span>
            <div class="actions">
              <button onclick="editContact('${contact.id}', '${contact.name}', '${contact.phone}')">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
              <button class="delete" onclick="deleteContact('${contact.id}')">üóë –£–¥–∞–ª–∏—Ç—å</button>
            </div>
          `;
          list.appendChild(li);
        });
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:', error);
      }
    }
    async function addContact() {
      const nameInput = document.getElementById('name');
      const phoneInput = document.getElementById('phone');
      const name = nameInput.value.trim();
      const phone = phoneInput.value.trim();
      if (!name || !phone) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
        return;
      }
      try {
        const response = await fetch(API_URL, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, phone })
        });
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö');
        document.getElementById('successMessage').textContent = '–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!';
        const msg = document.getElementById('successMessage');
        msg.classList.add('active');
        
        setTimeout(() => {
          msg.classList.remove('active');
          msg.textContent = '';
        }, 1500);
        nameInput.value = '';
        phoneInput.value = '';
        getContacts();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞.');
      }
    }
    async function deleteContact(id) {
      if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç?')) return;
      try {
        await fetch(`${API_URL}/${id}`, { method: 'DELETE' });
        getContacts();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞:', error);
      }
    }
    async function editContact(id, oldName, oldPhone) {
      const name = prompt('–ù–æ–≤–æ–µ –∏–º—è:', oldName);
      const phone = prompt('–ù–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:', oldPhone);
      if (!name || !phone) {
        alert('–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.');
        return;
      }
      try {
        await fetch(`${API_URL}/${id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, phone })
        });
        getContacts();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞:', error);
      }
    }

    window.onload = getContacts;
